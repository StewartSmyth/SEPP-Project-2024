name: "Continuous Integration"

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build-react:
    name: "Build React App"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: "Clone Repository"
        uses: actions/checkout@v4

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: "Install Node.js Dependencies"
        run: npm ci

      - name: "Build React App"
        run: npm run build

      # Uncomment when tests are tested
      # - name: "Run Tests"
      #   run: npm test

      - name: "Upload Build Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: build/

  build-python:
    name: "Build and Test Python"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.x]

    steps:
      - name: "Clone Repository"
        uses: actions/checkout@v4
      
      - name: "Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: "Cache dependencies"
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: "Create Virtual environment"
        run: python -m venv venv
      
      - name: "Activate Virtual environment and Install dependencies"
        run: |
          source venv/bin/activate
          pip install -r backend/requirements.txt
        
      - name: "Run Api_Testing"
        run: |
          source venv/bin/activate
          python backend/api_testing.py

      - name: "Run Service_Test"
        run: |
          source venv/bin/activate
          python backend/service_test.py